apiVersion: v1
kind: PersistentVolume
metadata:
  name: fl-prometheus-pv
  namespace: fl
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /data/prometheus

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fl-prometheus-pvc
  namespace: fl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fl-prometheus
  namespace: fl
  labels:
    app: fl-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fl-prometheus
  template:
    metadata:
      labels:
        app: fl-prometheus
    spec:
      serviceAccountName: fl-svc-account
      restartPolicy: "Always"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: fl
                  operator: In
                  values:
                    - "core"
      initContainers:
        - name: create-data-dir
          image: busybox
          command: ["mkdir", "-p", "/data/prometheus"]
          volumeMounts:
            - name: fl-prometheus-data
              mountPath: /data/prometheus
      volumes:
        - name: fl-prometheus-data
          persistentVolumeClaim:
            claimName: fl-prometheus-pvc
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: fl-prometheus-data
              mountPath: /prometheus/data
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: fl
  labels:
    app: fl-prometheus
spec:
  type: ClusterIP
  selector:
    app: fl-prometheus
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP

